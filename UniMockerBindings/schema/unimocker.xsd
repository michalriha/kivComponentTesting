<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
	xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
	xmlns:types="http://www.kiv.zcu.cz/component-testing/types"
	xmlns="http://www.kiv.zcu.cz/component-testing/mocker"
	targetNamespace="http://www.kiv.zcu.cz/component-testing/mocker"
	elementFormDefault="qualified"
	jaxb:version="2.1"
	jaxb:extensionBindingPrefixes="xjc">
	<!-- obecne typy // -->

    <xsd:import namespace="http://www.kiv.zcu.cz/component-testing/types" schemaLocation="https://raw.github.com/michalriha/kivComponentTesting/extract_common_datatypes/CommonTypes/schema/types.xsd" />

	<xsd:simpleType name="TBundleName">
		<xsd:restriction base="xsd:token">
			<xsd:pattern value="(([a-z_]+[0-9]*)+\.)+([a-z_]+[0-9]*)*" />
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:simpleType name="TInterfaceName">
		<xsd:restriction base="xsd:token">
			<xsd:pattern value="(([a-z_]+[0-9]*)+\.)+([a-zA-Z_]+[0-9]*)*" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="TMethodName">
		<xsd:restriction base="xsd:token">
			<xsd:pattern value="[a-zA-Z_$]([a-zA-Z0-9_$])*" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="TVersion">
		<xsd:restriction base="xsd:token">
			<xsd:pattern value="(\d+\.)*(\d+)" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="TAnyValue">
		<xsd:complexContent>
			<xsd:extension base="types:TNull" />
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TValue">
		<xsd:choice>
			<xsd:element ref="types:String" /> <!-- <xsd:element name="String" type="xsd:string" /> -->
			<xsd:element ref="types:BigInteger" /><!-- <xsd:element name="BigInteger" type="xsd:integer" /> -->
			<xsd:element ref="types:Long" /> <!-- <xsd:element name="Long" type="xsd:long" /> -->
			<xsd:element ref="types:Integer" /> <!-- <xsd:element name="Integer" type="xsd:int" /> -->
			<xsd:element ref="types:Short" /> <!-- <xsd:element name="Short" type="xsd:short" /> -->
			<xsd:element ref="types:Byte" /> <!-- <xsd:element name="Byte" type="xsd:byte" /> -->
			<xsd:element ref="types:BigDecimal" /> <!-- <xsd:element name="BigDecimal" type="xsd:decimal"/> -->
			<xsd:element ref="types:Double" /> <!-- <xsd:element name="Double" type="xsd:double" /> -->
			<xsd:element ref="types:Float" /> <!-- <xsd:element name="Float" type="xsd:float" /> -->
			<xsd:element ref="types:Boolean" /> <!-- <xsd:element name="Boolean" type="xsd:boolean" /> -->
			<xsd:element ref="types:File" /> <!--  name="File" type="types:TFile" /> -->
			<xsd:element ref="types:Strings" /> <!-- name="Strings" type="types:TStringCollection" /> -->
			<xsd:element ref="types:BigInts" /> <!-- name="BigInts" type="types:TBigIntegerCollection" /> -->
			<xsd:element ref="types:Longs" /> <!-- <name="Longs" type="types:TLongCollection" /> -->
			<xsd:element ref="types:Ints" /> <!-- name="Ints" type="types:TIntCollection" /> -->
			<xsd:element ref="types:Shorts" /> <!--  name="Shorts" type="types:TShortCollection" /> -->
			<xsd:element ref="types:Bytes" /> <!-- name="Bytes" type="types:TByteCollection" /> -->
			<xsd:element ref="types:BigDecimals" /> <!-- name="BigDecimals" type="types:TBigDecimalCollection" /> -->
			<xsd:element ref="types:Doubles" /> <!-- name="Doubles" type="types:TDoubleCollection" /> -->
			<xsd:element ref="types:Floats" /> <!-- name="Floats" type="types:TFloatCollection" /> -->
			<xsd:element ref="types:Booleans" /> <!-- name="Booleans" type="types:TBooleanCollection" /> -->
			<xsd:element ref="types:Files" /> <!-- name="Files" type="types:TFileCollection" /> -->
			<xsd:element ref="types:Null" /> <!-- name="Null" type="types:TNull" /> -->
			<xsd:element name="AnyValue" type="TAnyValue" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="TArgument">
		<xsd:complexContent>
			<xsd:extension base="TValue">
				<xsd:attribute name="ord-num" type="xsd:int" default="0"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="TArgumentsList">
		<xsd:sequence>
			<xsd:element name="argument" type="TArgument" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- simulovane komponenty -->
	<xsd:complexType name="TInvocation">
		<xsd:sequence>
			<xsd:element name="arguments" type="TArgumentsList" />
			<xsd:element name="return" type="TValue" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="TCodeInjection">
	   <xsd:choice>
	       <xsd:element name="call">
	           <xsd:complexType>
	               <xsd:choice>
	                   <xsd:element name="static">
	                       <xsd:complexType>
	                           <xsd:sequence>
	                               <xsd:element name="bundle">
	                                   <xsd:complexType>
	                                       <xsd:attribute name="symbolic-name" type="TBundleName" />
	                                       <xsd:attribute name="version" type="TVersion" />
	                                   </xsd:complexType>
	                               </xsd:element>
	                               <xsd:element name="method">
	                                   <xsd:complexType>
	                                       <xsd:attribute name="name" type="TInterfaceName" />
	                                       <xsd:attribute name="overrides-return-values" type="xsd:boolean" />
	                                   </xsd:complexType>
	                               </xsd:element>
	                           </xsd:sequence>
	                       </xsd:complexType>
	                   </xsd:element>
	                   <xsd:element name="service">
	                       <xsd:complexType>
	                           <xsd:sequence>
	                               <xsd:element name="method">
	                                   <xsd:complexType>
	                                       <xsd:attribute name="name" type="TMethodName" />
	                                       <xsd:attribute name="overrides-return-values" type="xsd:boolean" />
	                                   </xsd:complexType>
	                               </xsd:element>
	                           </xsd:sequence>
                               <xsd:attribute name="name" type="TInterfaceName" />
	                       </xsd:complexType>
	                   </xsd:element>
	               </xsd:choice>
	           </xsd:complexType>
	       </xsd:element>
	   </xsd:choice>
	</xsd:complexType>
	
	<xsd:complexType name="TInvokedMethod">
		<xsd:sequence>
		    <xsd:element name="code-injection" type="TCodeInjection" minOccurs="0" maxOccurs="1" />
			<xsd:element name="invocation" type="TInvocation" minOccurs="1" maxOccurs="unbounded" />
		</xsd:sequence>
		<xsd:attribute name="name" type="TMethodName" />
	</xsd:complexType>
	
	<xsd:complexType name="TSimulatedService">
		<xsd:sequence>
			<xsd:element name="method" type="TInvokedMethod" minOccurs="1" maxOccurs="unbounded" />
		</xsd:sequence>
		<xsd:attribute name="interface" type="TInterfaceName" />
		<xsd:attribute name="ignore-undefined-methods" type="xsd:boolean" use="optional" default="false"/>
		<xsd:attribute name="ignore-undefined-possibilities" type="xsd:boolean" use="optional" default="false" />
	</xsd:complexType>
	
	<xsd:complexType name="TBundle">
		<xsd:sequence>
			<xsd:element name="service" type="TSimulatedService" minOccurs="1" maxOccurs="unbounded" />
		</xsd:sequence>
		<xsd:attribute name="symbolic-name" type="TBundleName" />
		<xsd:attribute name="version" type="TVersion" />
	</xsd:complexType>
	
	<xsd:complexType name="TBundleList">
		<xsd:sequence>
			<xsd:element name="bundle" type="TBundle" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>
	
	<!-- projekt // -->
	<xsd:complexType name="TProject">
		<xsd:sequence>
			<xsd:element name="simulated-components" type="TBundleList" minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- dokument // -->
	<xsd:element name="project" type="TProject" />
	
</xsd:schema>